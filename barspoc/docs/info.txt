Purpose - PoC to act as both BaRS Provider and BaRS Consumer for basic appointment management

Using INT environment - setup for certificates etc located at https://simplifier.net/guide/nhsbookingandreferralstandard/Home/Build/Testing-and-Environments?version=1.8.1#onboarding

Domain for BaRS supplier - BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk
Requesting certificate and domain - needs domain first with arbitraty CNAME entry - this then allows certificate to be created. 
Certificate is then used to create the custom domain name in API GW - which provides the actual domain name to which the original DNS entry needs a CNAME entry to.

creating a CSR for certificate
openssl genrsa -out BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.key 2048
openssl req -new -key BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.key -out BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.csr

Certificate and Domain requested 25/1/25

Certificate issued by ITOC - see https://digital.nhs.uk/services/path-to-live-environments/path-to-live-forms/combined-endpoint-and-service-registration-request
DNS entry issued by DNS team (email team with details - don't need domain before getting certificate)

Merging crt and key (in case need to load client cert into cert store on laptop)
certutil -mergepfx BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.crt BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.pfx  -- this allows browser based access using client cert.


plain TLS
curl -v https://int-barspoc-barspocbe.nhsdta.com/barspoc/FHIR/R4/Appointment/1234
TLSMA

curl -vk https://BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk/barspoc/FHIR/R4/Appointment?patient%3Aidentifier=https%3A%2F%2Ffhir.nhs.uk%2FId%2Fnhs-number%7C6700028191 --cert ../certs/testclient/internal-dev.proxy.nirpoc.nhsesolarch.nhs.uk.crt --key ../certs/testclient/internal-dev.proxy.nirpoc.nhsesolarch.nhs.uk.key

#with BaRS certificate
curl -vk https://bars-int-x26.tsassolarch.thirdparty.nhs.uk/barspoc/FHIR/R4/Appointment/4a3836f5-2d42-4d3e-87c1-680173b7fa5c --cert ../certs/BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.crt --key ../certs/BaRS-INT-X26.TSASSolArch.thirdparty.nhs.uk.key


HTTP API Gateway configuration:
- load the certificate for the custom domain into AWS Cert Manager
- For API Gateway need to have a "verification" certificate issued by AWS, with DNS verification to prove ownership of the domain.
  - in AWS Certificate Manager - request a new public certificate in the relevant domain name (bars-int-x26.tsassolarch.thirdparty.nhs.uk) 
  - AWS then requires a CNAME record to be created in a random subdomain - send this request to DNS team
- create a Custom Domain which links the certificate - note the AWS DNS name for the custom domain name (e.g. d-cwm1q2lhll.execute-api.eu-west-2.amazonaws.com) 
    - note - this is different to the "normal" domain name for the API (e.g. cs4cbdgvl9.execute-api.eu-west-2.amazonaws.com)
- create a CNAME record for the actual domain pointing to the Custom Domain name domain - all should now work OK
  - e.g. bars-int-x26.tsassolarch.thirdparty.nhs.uk. 3600 IN CNAME d-cwm1q2lhll.execute-api.eu-west-2.amazonaws.com.



BaRS Receiver set up in INT as follows (manual process - emailing the BaRS team with Base URL information):
"matthewbrown":"https://bars-int-x26.tsassolarch.thirdparty.nhs.uk/barspoc/fhir/r4"â€‚

So will need as an "identifier" in DocumentReference resources
{"system":"https://fhir.nhs.uk/Id/dos-service-id","value":"matthewbrown"}

Base64 encoded = eyJzeXN0ZW0iOiJodHRwczovL2ZoaXIubmhzLnVrL0lkL2Rvcy1zZXJ2aWNlLWlkIiwidmFsdWUiOiJtYXR0aGV3YnJvd24ifQ==

So the header you need (along with the others) is
NHSD-Target-Identifier: eyJzeXN0ZW0iOiJodHRwczovL2ZoaXIubmhzLnVrL0lkL2Rvcy1zZXJ2aWNlLWlkIiwidmFsdWUiOiJtYXR0aGV3YnJvd24ifQ==
when invoking the BaRS proxy

NRL information
Valuesets contained in code in github repo as follows:
https://github.com/NHSDigital/NRLF/tree/develop/resources/fhir
