{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Cloudformation template to create shared S3 bucket for overall service",
  "Parameters": {
    "APIGWDOMAIN": {
      "Type": "String",
      "Description": "The domain name for the API Gateway",
      "Default": "dyi88kwqnb.execute-api.eu-west-2.amazonaws.com"
    },
    "SHORTCODE": {
      "Type": "String",
      "Description": "The shortcode for tags",
      "Default": "mabr8"
    },
    "BRANCHNAME": {
      "Type": "String",
      "Default": "main",
      "Description": "Branchname for the deployment"
    },
    "CERTARN": {
      "Type": "String",
      "Description": "Certificate for CloudFront deployment *.nhsdta.com - in US East 1",
      "Default": "arn:aws:acm:us-east-1:865198111306:certificate/6736e423-7278-444e-aa34-7d849d896d4f"
    },
    "HOSTEDZONEID": {
      "Type": "String",
      "Description": "NHSD TA Hosted Zone identifier for DNS entries",
      "Default": "Z1075FNTZPAM5I"
    },
    "HOSTEDZONESUFFIX": {
      "Type": "String",
      "Description": "Hosted Zone DNS suffix",
      "Default": "nhsdta.com"
    },
    "PROJECTNAME": {
      "Type": "String",
      "Default": "barspocui",
      "Description": "Project name for the deployment"
    }
  },

  "Resources": {
    "S3StaticBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "-",
            [{ "Ref": "BRANCHNAME" }, { "Ref": "SHORTCODE" }, { "Ref": "PROJECTNAME" }, "nextjsassets"]
          ]
        },
        "ObjectLockEnabled": false,
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [{ "Key": "shortcode", "Value": { "Ref": "SHORTCODE" } }],
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "S3LogBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "SHORTCODE" }, { "Ref": "PROJECTNAME" }, "nextjsassetslogs"]]
        },
        "ObjectLockEnabled": false,
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [{ "Key": "shortcode", "Value": { "Ref": "SHORTCODE" } }],
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "S3OriginAccessControl": {
      "Type": "AWS::CloudFront::OriginAccessControl",
      "Properties": {
        "OriginAccessControlConfig": {
          "Description": "Origin Access Control to link CloudFront to Nextjs assets bucket",
          "Name": { "Fn::Join": ["-", [{ "Ref": "S3StaticBucket" }, "oac"]] },
          "OriginAccessControlOriginType": "s3",
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4"
        }
      }
    },
    "CFAPIOrigReqPolicy": {
      "Type": "AWS::CloudFront::OriginRequestPolicy",
      "Properties": {
        "OriginRequestPolicyConfig": {
          "Comment": "Pass querystrings to origin",
          "CookiesConfig": {
            "CookieBehavior": "all"
          },
          "HeadersConfig": {
            "HeaderBehavior": "whitelist",
            "Headers": ["Referer", "User-Agent"]
          },
          "Name": {
            "Fn::Join": [
              "-",
              [{ "Ref": "BRANCHNAME" }, { "Ref": "SHORTCODE" }, { "Ref": "PROJECTNAME" }, "api", "nextjsoriginpolicy"]
            ]
          },
          "QueryStringsConfig": {
            "QueryStringBehavior": "all"
          }
        }
      }
    },
    "CFNextjsDistn": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            {
              "Fn::Join": [
                "", [{ "Ref": "BRANCHNAME" }, "-",{ "Ref": "SHORTCODE" },"-", { "Ref": "PROJECTNAME" },"-nextjsfe.",{ "Ref": "HOSTEDZONESUFFIX" }
                ]
              ]
            }
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": { "Ref": "CERTARN" },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only"
          },
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": ["S3StaticBucket", "RegionalDomainName"]
              },
              "Id": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "s3origin"]]
              },
              "OriginAccessControlId": {
                "Fn::GetAtt": ["S3OriginAccessControl", "Id"]
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": ""
              }
            },
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": { "Ref": "APIGWDOMAIN" },
              "Id": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "apiorigin"]]
              },
              "CustomOriginConfig": {
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 25,
                "OriginSSLProtocols": ["TLSv1.2"]
              }
            },
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": { "Ref": "APIGWDOMAIN" },
              "Id": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "startsessionorigin"]]
              },
              "CustomOriginConfig": {
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 25,
                "OriginSSLProtocols": ["TLSv1.2"]
              },
              "OriginPath": "/extapi/startsession"
            },
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": { "Ref": "APIGWDOMAIN" },
              "Id": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "nextjsorigin"]]
              },
              "CustomOriginConfig": {
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 25,
                "OriginSSLProtocols": ["TLSv1.2"]
              }
            }
          ],
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "POST",
                "PATCH",
                "DELETE"
              ],
              "CachedMethods": ["GET", "HEAD", "OPTIONS"],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "OriginRequestPolicyId": { "Ref": "CFAPIOrigReqPolicy" },
              "PathPattern": "extapi/*",
              "TargetOriginId": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "apiorigin"]]
              },
              "ViewerProtocolPolicy": "https-only"
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "POST",
                "PATCH",
                "DELETE"
              ],
              "CachedMethods": ["GET", "HEAD", "OPTIONS"],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "PathPattern": "startsession/*",
              "TargetOriginId": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "startsessionorigin"]]
              },
              "ViewerProtocolPolicy": "https-only"
            },
            {
              "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
              "CachedMethods": ["GET", "HEAD"],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "PathPattern": "assets/*",
              "TargetOriginId": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "s3origin"]]
              },
              "ViewerProtocolPolicy": "https-only"
            },
            {
              "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
              "CachedMethods": ["GET", "HEAD"],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "PathPattern": "index.html",
              "TargetOriginId": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "s3origin"]]
              },
              "ViewerProtocolPolicy": "https-only"
            },
            {
              "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
              "CachedMethods": ["GET", "HEAD"],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "PathPattern": "_next/static/*",
              "TargetOriginId": {
                "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "s3origin"]]
              },
              "ViewerProtocolPolicy": "https-only"
            }
          ],
          "Comment": "Nextjs UI for BaRS PoC distribution using S3 and API",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "POST",
              "PATCH",
              "DELETE"
            ],
            "CachedMethods": ["GET", "HEAD", "OPTIONS"],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "LambdaFunctionAssociations": [{
              "EventType" : "origin-request",
              "IncludeBody" : false,
              "LambdaFunctionARN" : "arn:aws:lambda:us-east-1:865198111306:function:main-rewriteUrlFunction-001:2"
            }
            ],
            "OriginRequestPolicyId": { "Ref": "CFAPIOrigReqPolicy" },
            "TargetOriginId": {
              "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, "nextjsorigin"]]
            },
            "ViewerProtocolPolicy": "https-only"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2and3",
          "IPV6Enabled": false,
          "Logging": {
            "Bucket": { "Fn::GetAtt": ["S3LogBucket", "DomainName"] },
            "IncludeCookies": true,
            "Prefix": "nextjspoc/cflogs/"
          }
        },
        "Tags": [{ "Key": "shortcode", "Value": { "Ref": "SHORTCODE" } }]
      }
    },
    "S3StaticBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "S3StaticBucket" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowCloudFrontServicePrincipalReadOnly",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com"
              },
              "Action": ["s3:GetObject", "s3:GetObjectVersion"],
              "Resource": {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "S3StaticBucket" }, "/*"]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:cloudfront::",
                        { "Ref": "AWS::AccountId" },
                        ":distribution/",
                        { "Fn::GetAtt": ["CFNextjsDistn", "Id"] }
                      ]
                    ]
                  }
                }
              }
            },
            {
              "Sid": "AllowCloudFrontServicePrincipal",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com"
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "S3StaticBucket" }, "/*"]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:cloudfront::",
                        { "Ref": "AWS::AccountId" },
                        ":distribution/",
                        { "Fn::GetAtt": ["CFNextjsDistn", "Id"] }
                      ]
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    },
    "nexjsCloudfrontR53Alias": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "AliasTarget": {
          "DNSName": { "Fn::GetAtt": ["CFNextjsDistn", "DomainName"] },
          "EvaluateTargetHealth": "false",
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "Comment": "DNS entry pointing at Cloudfront distribution for static content",
        "HostedZoneId": { "Ref": "HOSTEDZONEID" },
        "Name": {
          "Fn::Join": [
            "", [{ "Ref": "BRANCHNAME" }, "-",{ "Ref": "SHORTCODE" },"-", { "Ref": "PROJECTNAME" },"-nextjsfe.",{ "Ref": "HOSTEDZONESUFFIX" }]
          ]
        },
        "Type": "A"
      },
      "DependsOn": ["CFNextjsDistn"]
    }
  }
}
