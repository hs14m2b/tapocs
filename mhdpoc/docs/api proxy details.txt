Api Proxy is hosted on API-M and is called nhse-tsas-solarch-demo-api

GitHub setup requires repository to be forked and needs separate author and reviewer.
To enable commits have used personal github account (matthewandkaren@hotmail.com) as fork
Make local changes on branch. Publish branch to fork. Go into GitHub with personal account and create upstream pull request
Log into GitHub with corporate account and review pull request and merge.

Then go to Azure DevOps pipelines
https://dev.azure.com/NHSD-APIM/API%20Platform/_build?view=folders

https://dev.azure.com/NHSD-APIM/API%20Platform/_build?definitionScope=%5CNhse-Tsas-Solarch-Demo-Api

manually run the "build" pipeline, then the "release" pipeline using the tag for the merge on the master branch
extracting access token info uses apigee GetOAuthV2Info built-in routine - https://docs.apigee.com/api-platform/reference/policies/get-oauth-v2-info-policy#flowvariables-accesstokenvariables



Testing the API in the "internal" environments.
The developer portal does not create clients that have access to the "internal" instances of APIs. To create a client app a login to apigee non-prod is needed.
https://apigee.com/organizations/nhsd-nonprod/apps
There doesn't appear to be any description on confluence as to how to do this.
Could set up via https://dos-internal.ptl.api.platform.nhs.uk/MyApplications
?

To enable private_key_jwt auth on the app the jwks-resource-url custom attribute needs to be set.
The simplest way to do this is to create a "dummy" app on the developer portal with the public key and copy the generated url for the jwks endpoint

For this example the following has been created
Apigee non-prod app - name = tsas-solarch-demo-internal-app
Developer portal dummy app = test-solarch-demo

Generate key pair using instructions at https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-signed-jwt-authentication#step-2-generate-a-key-pair
KID=mhdtest001
openssl genrsa -out $KID.key 4096
openssl rsa -in $KID.key -pubout -outform PEM -out $KID.key.pub
//get modulus of the key

MODULUS=$(
    openssl rsa -pubin -in $KID.key.pub -noout -modulus `# Print modulus of public key` \
    | cut -d '=' -f2                                    `# Extract modulus value from output` \
    | xxd -r -p                                         `# Convert from string to bytes` \
    | openssl base64 -A                                 `# Base64 encode without wrapping lines` \
    | sed 's|+|-|g; s|/|_|g; s|=||g'                    `# URL encode as JWK standard requires`
)

//and create jwks file

echo '{
  "keys": [
    {
      "kty": "RSA",
      "n": "'"$MODULUS"'",
      "e": "AQAB",
      "alg": "RS512",
      "kid": "'"$KID"'",
      "use": "sig"
    }
  ]
}' > $KID.jwks.json

//the resultant url is https://api.service.nhs.uk/mock-jwks/ewogICJrZXlzIjogWwogICAgewogICAgICAia3R5IjogIlJTQSIsCiAgICAgICJuIjogInM0OFAxMlYtTWpEa1dpYnlqMGs3NGNndk5rWlJtYTFzcmM3WmV6QUM4VTR6RjNINGd2dUNuNkFPcWFqQWFGTFVQakZyeGFnQjF1SGJKQjNfcDBPX0FaRThOTVdMY0NYeko3MzFGY0tBUVBxb1YxVGJuWklfV3BfNkMzT3NoNHZlOU9RdnJ2UTI3WEhSLWhETUVfc3FOS3kzX0g1bnU5QkhYTWZ0YS1MbGhiUmhEWXZKSC12TFBNajJJSGl1M2VReEdjWDVIdFQxWTRVRW9ISW9majlKUWU4VksxWEpBWG1TdkVCd0ZtZTVTdW03cGpfYklnWGI1WjNKUEdfX1ZVMDY0Yk9MRXVDSTJCbVdXcUJ5eTFiZHJjdkJuMVJaX3NtalliRW56bTdsSDBaY3RuSF81R2hCMXJkdWxabWdQSDFXQW5wdG5ZMG5feXBlejg5TFp1RVM3TFNtUVA0eGdwbm1WY3p5MzJBSGhJc0dJS00yOC1vUGYzOFUxbk0wYXpXbFRrRHEtUlNlblpLOWRLYm91RmJfRGd6SThNQUFEaTJCdXl2a2R1MlZzaUlrakp0UFU3Q0luNHE0Y0ZnLUJsR0RONWNHWC0zcDF6RGlzdnNWSEczNlZNMGJEdU0zTVE4UUZRLVpuUV91UnZpQUVlcWkyNjMxQU5pQnlpR3llVlpONEx5SXBmaWp2Q3EwY04wUmVHRlhNWVd2ZjFZdVQzMndLUUJRMkYyWjBLenpSUTdtOGpOWE9QakVoZG9rc3h0c0FmbmppczFQWDRxbkhqVno2bHk4eVNpQ0xmRmIzc2VIQ0xpNVVVQzM2UTI5M0dUZHhTeFB0QWZJTGVyT3pGX0R5Uzd1NDFSSTFsbFFRaHdXbENnM05ZZ3JrcE4zNWlOX3RQNFBmY0xmQzlNIiwKICAgICAgImUiOiAiQVFBQiIsCiAgICAgICJhbGciOiAiUlM1MTIiLAogICAgICAia2lkIjogIm1oZHRlc3QwMDEiLAogICAgICAidXNlIjogInNpZyIKICAgIH0KICBdCn0K




Check back-end API
curl -X GET https://internal-dev-sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 --cert tsassolarchdemoapi.crt --key tsassolarchdemoapi.key -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-sandbox-mhdpoc-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01  -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-sandbox-mhdpoc-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01  -H "NHSE-NRL-Pointer-URL: sdlkdslkfj"
curl -X GET https://internal-dev-sandbox-mhdpoc-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReportProxy  -H "NHSE-NRL-Pointer-URL: https://internal-dev-sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01"
curl -X GET https://internal-dev-sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 --cert tsassolarchdemoapi.crt --key tsassolarchdemoapi.key -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-mhdpoc-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01  -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 --cert tsassolarchdemoapi.crt --key tsassolarchdemoapi.key -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 --cert internal-dev.proxy.nirpoc.nhsesolarch.nhs.uk.crt --key internal-dev.proxy.nirpoc.nhsesolarch.nhs.uk.key -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-mhdpoc-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
curl -X GET https://internal-dev-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReportProxy  --cert tsassolarchdemoapi.crt --key tsassolarchdemoapi.key -H "NHSE-NRL-Pointer-URL: https://internal-dev-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01"



Check API proxy
secured
#this is a generic api key for a shared app
curl -X GET https://internal-dev.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J"
#this is the api key for the demo app created to access the tsas solarch API
curl -X GET https://internal-dev.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 -H "apikey: lgA3WQ9NAVAySK3XQuQ4UCVn0z2SAAcx"
curl -X GET https://ref.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01 -H "apikey: lgA3WQ9NAVAySK3XQuQ4UCVn0z2SAAcx"
curl -X GET https://sandbox.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DocumentReference/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01

#this uses private_key_jwt auth and is located in the "test" folder. The demo app is configured to use the same jwks endpoint as is set up on the dummy app via developer portal
node get_mhds_document_ref_int_dev.mjs

# token introspection Testing
node post_token_introspect_int_dev.mjs
#also can use apikey to introspect
curl -X POST https://internal-dev.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/oauth2/introspect -H "apikey: lgA3WQ9NAVAySK3XQuQ4UCVn0z2SAAcx" -d "token=N6yjVJHIS8mCOiRs2DonAAAWoUp6"
curl -X POST https://internal-dev.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/oauth2/introspect -H "Authorization: Bearer N6yjVJHIS8mCOiRs2DonAAAWoUp6" -d "token=N6yjVJHIS8mCOiRs2DonAAAWoUp6"

open access
curl -X GET https://internal-dev-sandbox.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DocumentReference/Y05868-0e5741ab-55bc-4c80-90a5-c56df5a9a5e0
curl -X GET https://internal-dev.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DocumentReference/Y05868-0e5741ab-55bc-4c80-90a5-c56df5a9a5e0
curl -X GET https://internal-dev-sandbox.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DiagnosticReportLocal/Y05868-0e5741ab-55bc-4c80-90a5-c56df5a9a5e0 -H "NHSE-NRL-Pointer-URL: https://internal-dev-sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01"
curl -X GET https://internal-dev-sandbox.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DiagnosticReport -H "NHSE-NRL-Pointer-URL: https://internal-dev-sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReportLocal/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01"
curl -X GET https://internal-dev.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DiagnosticReportProxy -H "apikey: Too5BdPayTQACdw1AJK1rD4nKUD0Ag7J" -H "NHSE-NRL-Pointer-URL: https://internal-dev-sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReport/Y05868-1e404af3-077f-4bee-b7a6-a9be97e1ce01"
curl -X GET https://sandbox.api.service.nhs.uk/nhse-tsas-solarch-demo-api/mhdspoc/FHIR/R4/DiagnosticReport -H "NHSE-NRL-Pointer-URL: https://sandbox-mhdpoctlsma-mhdpocbe.nhsdta.com/mhdspoc/FHIR/R4/DiagnosticReportLocal/UNIQUEIDFORREPORT-1e404af3-077f-4bee-b7a6-a9be97e1ce01"


Backend of API is protected by root cert that is located in /home/matthew/certs for issuing new client certs to be used by API proxy

API specification borrows from https://github.com/NHSDigital/personal-demographics-service-api/blob/master/specification/personal-demographics.yaml


Using Auth in the Sanbox environment
 - create a client application in teh Sandbox environment and give it access to the "Identity Service (Sanbox)" API - this enables it to call the sandbox.api.service.nhs.uk/oauth2/token endpoint
 - add the jwks file to the API Client as normal and use the API Key details to authenticate against the Sanbox Oauth2 API. The bearer token can then be included in the calls to Sandbox APIs.



IGNORE BELOW - WAS TRYING TO SET UP NEW API USING PROXYGEN


See https://nhsd-confluence.digital.nhs.uk/display/APM/Building+and+deploying+your+API+alpha+with+Proxy+Generator

key id for accessing proxygen is mabr8-pxygencli-1

API name is nhse-tsas-solarch-mhds-registry

 - then send message on slack to get setup on proxygen for the API.

 Install python3 and python3-pip
 then pip install proxygen-cli

 set proxygen api name
 proxygen settings set api nhse-tsas-solarch-mhds-registry

 set user details
 proxygen credentials set private_key_path ~/VSCode/ta-pocs/tapocs/mhdpoc/certs/mabr8-pxygencli-1.pem key_id mabr8-pxygencli-1 client_id nhse-tsas-solarch-mhds-registry-client


Copy API template repo from https://github.com/NHSDigital/hello-world-api

Deploy API to sandbox
proxygen instance deploy sandbox nhse-tsas-solarch-mhds-registry ~/VSCode/ta-pocs/tapocs/mhdpoc/nhse-tsas-solarch-mhds-registry/specification/nhse-tsas-solarch-mhds-registry.yaml

