{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Cloudformation template to create analytics components",
  "Parameters": {
    "SHORTCODE": {
      "Type": "String",
      "Description": "The shortcode for tags",
      "Default": "mabr8"
    },
    "BRANCHNAME": {
      "Type": "String",
      "Default": "main",
      "Description": "Branchname for the deployment"
    },
    "PROJECTNAME": {
      "Type": "String",
      "Default": "queuescaling",
      "Description": "Project name for the deployment"
    },
    "CERTARN": {
      "Type": "String",
      "Description": "Certificate for CloudFront deployment *.nhsdta.com - in US East 1",
      "Default": "arn:aws:acm:us-east-1:865198111306:certificate/6736e423-7278-444e-aa34-7d849d896d4f"
    },
    "HOSTEDZONEID": {
      "Type": "String",
      "Description": "NHSD TA Hosted Zone identifier for DNS entries",
      "Default": "Z1075FNTZPAM5I"
    },
    "HOSTEDZONESUFFIX": {
      "Type": "String",
      "Description": "Hosted Zone DNS suffix",
      "Default": "nhsdta.com"
    }
  },
  "Globals": {
    "Function": {
      "Tags": {
        "shortcode": { "Ref": "SHORTCODE" }
      },
      "Environment": {
        "Variables": {
          "BRANCHNAME": { "Ref": "BRANCHNAME" }
        }
      },
      "Timeout": 300
    }
  },
  "Resources": {
    "S3AnalyticsBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "-",
            [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, { "Ref": "SHORTCODE" }, "analytics"]
          ]
        },
        "ObjectLockEnabled": false,
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [{ "Key": "shortcode", "Value": { "Ref": "SHORTCODE" } }]
      }
    },
    "processAnalyticsStreamFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": "stack008lambdas.zip",
        "Description": "The lambda function that receives items from the DDB Stream and publishes to S3 for analytics",
        "Environment": {
          "Variables" : {
            "ANALYTICSBUCKET": {"Ref" : "S3AnalyticsBucket"}
          }
        },
        "FunctionName": {
          "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" } , "processAnalyticsStreamFunction"]]
        },
        "Handler": "processddbanalyticsstream.handler",
        "Layers": [{"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"} ,":layer:", { "Ref": "BRANCHNAME" },"-", { "Ref": "PROJECTNAME" }, "-","queuescalingLambdaLayer" ,":3" ]]}],
        "MemorySize": "1024",
        "Role": {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "queuescalingpocLambdaRoleArn"]]}},
        "Runtime": "nodejs18.x",
        "Tags": [{"Key": "shortcode", "Value": { "Ref": "SHORTCODE" }
        }],
        "Timeout": 600
      },
      "DependsOn": ["S3AnalyticsBucket"]
    },
    "processAnalyticsStreamLambdaPermission": {
      "Type" : "AWS::Lambda::Permission",
      "Properties" : {
          "Action" : "lambda:InvokeFunction",
          "FunctionName" : {"Ref": "processAnalyticsStreamFunction"},
          "Principal" : "s3.amazonaws.com",
          "SourceArn" : {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "requestsTableStreamArn"]]}}
      },
      "DependsOn": ["processAnalyticsStreamFunction"]
    },
    "processAnalyticsStreamLambdaEventSource":{
      "Type" : "AWS::Lambda::EventSourceMapping",
      "Properties" : {
          "BatchSize" : 1000,
          "BisectBatchOnFunctionError" : true,
          "Enabled" : true,
          "EventSourceArn" : {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "requestsTableStreamArn"]]}},
          "FunctionName" : {"Ref": "processAnalyticsStreamFunction"},
          "FunctionResponseTypes": ["ReportBatchItemFailures"],
          "MaximumBatchingWindowInSeconds" : 1,
          "MaximumRecordAgeInSeconds" : -1,
          "MaximumRetryAttempts" : -1,
          "ParallelizationFactor" : 10,
          "StartingPosition" : "LATEST"
        },
      "DependsOn": ["processAnalyticsStreamFunction"]
    },
    "athenaWorkgroup": {
        "Type" : "AWS::Athena::WorkGroup",
        "Properties" : {
            "Description" : "Workgroup for analysing items from comms mgr poc",
            "Name" : "commsmgrpoc",
            "RecursiveDeleteOption" : true,
            "State" : "ENABLED",
            "Tags" : [ {"Key": "shortcode", "Value": { "Ref" : "SHORTCODE" }} ],
            "WorkGroupConfiguration" : {
                "EnforceWorkGroupConfiguration" : true,
                "PublishCloudWatchMetricsEnabled" : false,
                "RequesterPaysEnabled" : false,
                "ResultConfiguration" : {
                    "OutputLocation" : {
                      "Fn::Join": ["", [ "s3://",{"Ref": "S3AnalyticsBucket" }, "/athena/output"]]
                    }
                }
            }
        },
      "DependsOn": ["S3AnalyticsBucket"]
    }
  },
  "Outputs" : {
      "S3BucketName" : {
          "Description" : "The Name of the S3 Analytics Bucket",
          "Value" : { "Ref": "S3AnalyticsBucket" },
          "Export": {"Name": {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "S3AnalyticsBucket"]]}}
      }
  }
}
