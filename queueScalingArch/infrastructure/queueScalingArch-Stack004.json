{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Cloudformation template to subscribe to SQS queues and pretend to send email and/or SMS",
  "Parameters": {
    "SHORTCODE": {
      "Type": "String",
      "Description": "The shortcode for tags",
      "Default": "mabr8"
    },
    "BRANCHNAME": {
      "Type": "String",
      "Default": "main",
      "Description": "Branchname for the deployment"
    },
    "PROJECTNAME": {
      "Type": "String",
      "Default": "queuescaling",
      "Description": "Project name for the deployment"
    },
    "CERTARN": {
      "Type": "String",
      "Description": "Certificate for CloudFront deployment *.nhsdta.com - in US East 1",
      "Default": "arn:aws:acm:us-east-1:865198111306:certificate/6736e423-7278-444e-aa34-7d849d896d4f"
    },
    "NOTIFICATIONSDOMAIN": {
      "Type": "String",
      "Description": "The domain qualifier for pretending to be gov notify",
      "Default": "notifications"
    },
    "HOSTEDZONEID": {
      "Type": "String",
      "Description": "NHSD TA Hosted Zone identifier for DNS entries",
      "Default": "Z1075FNTZPAM5I"
    },
    "HOSTEDZONESUFFIX": {
      "Type": "String",
      "Description": "Hosted Zone DNS suffix",
      "Default": "nhsdta.com"
    }
  },
  "Globals": {
    "Function": {
      "Tags": {
        "shortcode": { "Ref": "SHORTCODE" }
      },
      "Environment": {
        "Variables": {
          "BRANCHNAME": { "Ref": "BRANCHNAME" }
        }
      },
      "Timeout": 300
    }
  },
  "Resources": {
    "sendSMSFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": "stack004lambdas.zip",
        "Description": "The lambda function that receives messages from SQS and pretends to send an SMS",
        "Environment": {
          "Variables" : {
            "HOSTEDZONESUFFIX": { "Ref": "HOSTEDZONESUFFIX" },
            "BRANCHNAME": { "Ref": "BRANCHNAME" },
            "PROJECTNAME": { "Ref": "PROJECTNAME" },
            "NOTIFICATIONSDOMAIN": {"Ref": "NOTIFICATIONSDOMAIN"},
            "REQUESTSTABLENAME" : {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "requestsTable"]]}},
            "SYNTHNOTIFYDOMAIN": {"Fn::Join": [".", [{"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, { "Ref": "NOTIFICATIONSDOMAIN" }]]},{ "Ref": "HOSTEDZONESUFFIX" }]]}
          }
        },
        "FunctionName": {
          "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" } , "sendSMSFunction"]]
        },
        "Handler": "sendsms.handler",
        "Layers": [{"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"} ,":layer:", { "Ref": "BRANCHNAME" },"-", { "Ref": "PROJECTNAME" }, "-","queuescalingLambdaLayer" ,":3" ]]}],
        "MemorySize": "1024",
        "Role": {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "queuescalingpocLambdaRoleArn"]]}},
        "Runtime": "nodejs18.x",
        "Tags": [{"Key": "shortcode", "Value": { "Ref": "SHORTCODE" }
        }],
        "Timeout": 300
      }
    },
    "smsSQSLambdaEventSource":{
      "Type" : "AWS::Lambda::EventSourceMapping",
      "Properties" : {
          "BatchSize" : 1,
          "Enabled" : true,
          "EventSourceArn" : {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "smsDeliveryQueueArn"]]}},
          "FunctionName" : {"Ref": "sendSMSFunction"},
          "MaximumBatchingWindowInSeconds" : 1,
          "ScalingConfig": {
            "MaximumConcurrency" : 50
          }
        }
    },
    "sendEMAILFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": "stack004lambdas.zip",
        "Description": "The lambda function that receives messages from SQS and pretends to send an SMS",
        "Environment": {
          "Variables" : {
            "HOSTEDZONESUFFIX": { "Ref": "HOSTEDZONESUFFIX" },
            "BRANCHNAME": { "Ref": "BRANCHNAME" },
            "PROJECTNAME": { "Ref": "PROJECTNAME" },
            "NOTIFICATIONSDOMAIN": {"Ref": "NOTIFICATIONSDOMAIN"},
            "REQUESTSTABLENAME" : {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "requestsTable"]]}},
            "SYNTHNOTIFYDOMAIN": {"Fn::Join": [".", [{"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, { "Ref": "NOTIFICATIONSDOMAIN" }]]},{ "Ref": "HOSTEDZONESUFFIX" }]]}
          }
        },
        "FunctionName": {
          "Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" } , "sendEMAILFunction"]]
        },
        "Handler": "sendemail.handler",
        "Layers": [{"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"} ,":layer:", { "Ref": "BRANCHNAME" },"-", { "Ref": "PROJECTNAME" }, "-","queuescalingLambdaLayer" ,":3" ]]}],
        "MemorySize": "1024",
        "Role": {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "queuescalingpocLambdaRoleArn"]]}},
        "Runtime": "nodejs18.x",
        "Tags": [{"Key": "shortcode", "Value": { "Ref": "SHORTCODE" }
        }],
        "Timeout": 300
      }
    },
    "emailSQSLambdaEventSource":{
      "Type" : "AWS::Lambda::EventSourceMapping",
      "Properties" : {
          "BatchSize" : 1,
          "Enabled" : true,
          "EventSourceArn" : {"Fn::ImportValue" : {"Fn::Join": ["-", [{ "Ref": "BRANCHNAME" }, { "Ref": "PROJECTNAME" }, "emailDeliveryQueueArn"]]}},
          "FunctionName" : {"Ref": "sendEMAILFunction"},
          "MaximumBatchingWindowInSeconds" : 1,
          "ScalingConfig": {
            "MaximumConcurrency" : 50
          }
        }
    }
  },
  "Outputs" : {
  }
}
